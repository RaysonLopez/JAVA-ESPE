/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface.Cliente;

import Login.Login;
import java.awt.Image;
import java.util.ResourceBundle;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rayson
 */
public class IngresoPropiedades extends javax.swing.JFrame {
    private DefaultTableModel tableModel;
    private ResourceBundle bundle;
    /**
     * Creates new form MenuPrincipal
     */
    public IngresoPropiedades() {
        initComponents();
        errorNames.setVisible(false);
        errorDescripcion.setVisible(false);
        errorDirrecion.setVisible(false);
        errorPrecio.setVisible(false);
        errorMetros.setVisible(false);
       
        Redimensionador(fondoM,"/IngresoClienteNuevo/Menu1.jpeg");
        tableModel = new DefaultTableModel(
        new Object[][] {},
        new String[]{"Nombre y Apellido","Descripcion","Precio","Metros Cuadrados","Dirrecion","Disponibilidad","Numero De Cuartos", "Ubicacion"}
        ) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    dataTable.setModel(tableModel);
    }
        private void Redimensionador(JComponent componente, String ruta) {
        ImageIcon imagenFondo = cargarImagen(ruta);
        Icon fondoRedimensionado = redimensionarImagen(imagenFondo, componente.getWidth(), componente.getHeight());
        aplicarImagen(componente, fondoRedimensionado);
        centrarVentana();
        
    }

    // Cargar la imagen desde la ruta especificada
    private ImageIcon cargarImagen(String ruta) {
        return new ImageIcon(getClass().getResource(ruta));
    }

    // Redimensionar la imagen a las dimensiones especificadas
    private Icon redimensionarImagen(ImageIcon imagen, int ancho, int alto) {
        return new ImageIcon(imagen.getImage().getScaledInstance(ancho, alto, Image.SCALE_DEFAULT));
    }

    // Aplicar la imagen al componente, si es un JLabel
    private void aplicarImagen(JComponent componente, Icon imagen) {
        if (componente instanceof JLabel) {
            ((JLabel) componente).setIcon(imagen);
        } else if (componente instanceof JButton) {
            ((JButton) componente).setIcon(imagen);
        } else {
            // Manejar otros tipos de componentes si es necesario
            // Por ejemplo, podrías lanzar una excepción o hacer algo por defecto
            throw new IllegalArgumentException("El componente debe ser un JLabel o JButton");
        }
    }

    // Centrar la ventana relativa a la pantalla
    private void centrarVentana() {
        setLocationRelativeTo(null);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        nombrePLabel = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        errorDirrecion = new javax.swing.JLabel();
        telfLabel = new javax.swing.JLabel();
        errorPrecio = new javax.swing.JLabel();
        errorMetros = new javax.swing.JLabel();
        namesPropiedad = new javax.swing.JTextField();
        descripcionText = new javax.swing.JTextField();
        precioText = new javax.swing.JTextField();
        metrosText = new javax.swing.JTextField();
        deleteTable = new javax.swing.JButton();
        saveTable = new javax.swing.JButton();
        ModificateTable = new javax.swing.JButton();
        numeroCuartosCombo = new javax.swing.JComboBox<>();
        Genero = new javax.swing.JLabel();
        languaje = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        ubicacionCombo = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        idLabel1 = new javax.swing.JLabel();
        disponibilidadCombo = new javax.swing.JComboBox<>();
        idLabel2 = new javax.swing.JLabel();
        dirreccionText = new javax.swing.JTextField();
        telfLabel1 = new javax.swing.JLabel();
        errorNames = new javax.swing.JLabel();
        errorDescripcion = new javax.swing.JLabel();
        fondoCampos = new javax.swing.JLabel();
        fondoM = new javax.swing.JLabel();
        MenuBaseDatos = new javax.swing.JMenuBar();
        MongolBDMenu = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        GuardarBD = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenu();
        exitMenuAdd = new javax.swing.JMenuItem();
        backMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setViewportView(dataTable);

        jScrollPane2.setViewportView(jScrollPane1);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 810, 231));

        nombrePLabel.setText("Nombres Completos");
        jPanel2.add(nombrePLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 164, -1));

        idLabel.setText("Numeros De Cuartos");
        jPanel2.add(idLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, 120, -1));

        emailLabel.setText("Precio");
        jPanel2.add(emailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 90, 183, -1));

        errorDirrecion.setForeground(new java.awt.Color(255, 0, 51));
        errorDirrecion.setText("Error:No puede estar vacio");
        jPanel2.add(errorDirrecion, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 170, 30));

        telfLabel.setText("Metros Cuadrados");
        jPanel2.add(telfLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 183, -1));

        errorPrecio.setForeground(new java.awt.Color(255, 0, 51));
        errorPrecio.setText("Precio Incorrecto");
        jPanel2.add(errorPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 183, -1));

        errorMetros.setForeground(new java.awt.Color(255, 0, 51));
        errorMetros.setText("Error:metros incorrectos");
        jPanel2.add(errorMetros, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, 183, -1));

        namesPropiedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namesPropiedadActionPerformed(evt);
            }
        });
        jPanel2.add(namesPropiedad, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 189, -1));

        descripcionText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descripcionTextActionPerformed(evt);
            }
        });
        jPanel2.add(descripcionText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 183, 30));

        precioText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precioTextActionPerformed(evt);
            }
        });
        jPanel2.add(precioText, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 183, 30));

        metrosText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metrosTextActionPerformed(evt);
            }
        });
        jPanel2.add(metrosText, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 183, -1));

        deleteTable.setText("ELIMINAR");
        deleteTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTableActionPerformed(evt);
            }
        });
        jPanel2.add(deleteTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 480, -1, -1));

        saveTable.setText("GUARDAR");
        saveTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveTableActionPerformed(evt);
            }
        });
        jPanel2.add(saveTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, -1, -1));

        ModificateTable.setText("MODIFICAR");
        ModificateTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificateTableActionPerformed(evt);
            }
        });
        jPanel2.add(ModificateTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 480, -1, -1));

        numeroCuartosCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9" }));
        numeroCuartosCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroCuartosComboActionPerformed(evt);
            }
        });
        jPanel2.add(numeroCuartosCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, 120, 30));

        Genero.setText("Ubicacion");
        jPanel2.add(Genero, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 160, 183, -1));

        languaje.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Español", "English" }));
        languaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                languajeActionPerformed(evt);
            }
        });
        jPanel2.add(languaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 480, -1, -1));

        jButton1.setText("LEER");
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 480, -1, -1));

        ubicacionCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aruba", "Afghanistan", "Angola", "Anguilla", "Åland Islands", "Albania", "Andorra", "United Arab Emirates", "Argentina", "Armenia", "American Samoa", "Antarctica", "French Southern Territories", "Antigua and Barbuda", "Australia", "Austria", "Azerbaijan", "Burundi", "Belgium", "Benin", "Bonaire", "Sint Eustatius and Saba", "Burkina Faso", "Bangladesh", "Bulgaria", "Bahrain", "Bahamas", "Bosnia and Herzegovina", "Saint Barthélemy", "Belarus", "Belize", "Bermuda", "Bolivia", "Plurinational State of", "Brazil", "Barbados", "Brunei Darussalam", "Bhutan", "Bouvet Island", "Botswana", "Central African Republic", "Canada", "Cocos (Keeling) Islands", "Switzerland", "Chile", "China", "Côte d'Ivoire", "Cameroon", "Congo", "The Democratic Republic of the", "Congo", "Cook Islands", "Colombia", "Comoros", "Cabo Verde", "Costa Rica", "Cuba", "Curaçao", "Christmas Island", "Cayman Islands", "Cyprus", "Czechia", "Germany", "Djibouti", "Dominica", "Denmark", "Dominican Republic", "Algeria", "Ecuador", "Egypt", "Eritrea", "Western Sahara", "Spain", "Estonia", "Ethiopia", "Finland", "Fiji", "Falkland Islands (Malvinas)", "France", "Faroe Islands", "Micronesia", "Federated States of", "Gabon", "United Kingdom", "Georgia", "Guernsey", "Ghana", "Gibraltar", "Guinea", "Guadeloupe", "Gambia", "Guinea-Bissau", "Equatorial Guinea", "Greece", "Grenada", "Greenland", "Guatemala", "French Guiana", "Guam", "Guyana", "Hong Kong", "Heard Island and McDonald Islands", "Honduras", "Croatia", "Haiti", "Hungary", "Indonesia", "Isle of Man", "India", "British Indian Ocean Territory", "Ireland", "Iran", "Islamic Republic of", "Iraq", "Iceland", "Israel", "Italy", "Jamaica", "Jersey", "Jordan", "Japan", "Kazakhstan", "Kenya", "Kyrgyzstan", "Cambodia", "Kiribati", "Saint Kitts and Nevis", "Korea", "Republic of", "Kuwait", "Lao People's Democratic Republic", "Lebanon", "Liberia", "Libya", "Saint Lucia", "Liechtenstein", "Sri Lanka", "Lesotho", "Lithuania", "Luxembourg", "Latvia", "Macao", "Saint Martin (French part)", "Morocco", "Monaco", "Moldova", "Republic of", "Madagascar", "Maldives", "Mexico", "Marshall Islands", "North Macedonia", "Mali", "Malta", "Myanmar", "Montenegro", "Mongolia", "Northern Mariana Islands", "Mozambique", "Mauritania", "Montserrat", "Martinique", "Mauritius", "Malawi", "Malaysia", "Mayotte", "Namibia", "New Caledonia", "Niger", "Norfolk Island", "Nigeria", "Nicaragua", "Niue", "Netherlands", "Norway", "Nepal", "Nauru", "New Zealand", "Oman", "Pakistan", "Panama", "Pitcairn", "Peru", "Philippines", "Palau", "Papua New Guinea", "Poland", "Puerto Rico", "Korea", "Democratic People's Republic of", "Portugal", "Paraguay", "Palestine", "State of", "French Polynesia", "Qatar", "Réunion", "Romania", "Russian Federation", "Rwanda", "Saudi Arabia", "Sudan", "Senegal", "Singapore", "South Georgia and the South Sandwich Islands", "Saint Helena", "Ascension and Tristan da Cunha", "Svalbard and Jan Mayen", "Solomon Islands", "Sierra Leone", "El Salvador", "San Marino", "Somalia", "Saint Pierre and Miquelon", "Serbia", "South Sudan", "Sao Tome and Principe", "Suriname", "Slovakia", "Slovenia", "Sweden", "Eswatini", "Sint Maarten (Dutch part)", "Seychelles", "Syrian Arab Republic", "Turks and Caicos Islands", "Chad", "Togo", "Thailand", "Tajikistan", "Tokelau", "Turkmenistan", "Timor-Leste", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Tuvalu", "Taiwan", "Province of China", "Tanzania", "United Republic of", "Uganda", "Ukraine", "United States Minor Outlying Islands", "Uruguay", "United States", "Uzbekistan", "Holy See (Vatican City State)", "Saint Vincent and the Grenadines", "Venezuela", "Bolivarian Republic of", "Virgin Islands", "British", "Virgin Islands", "U.S.", "Viet Nam", "Vanuatu", "Wallis and Futuna", "Samoa", "Yemen", "South Africa", "Zambia", "Zimbabwe" }));
        ubicacionCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubicacionComboActionPerformed(evt);
            }
        });
        jPanel2.add(ubicacionCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, 90, 30));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("BIENVENIDO AL INGRESO DE CLIENTE\n\nFLEXIHOME\n\n");
        jScrollPane3.setViewportView(jTextArea1);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 100, 280, 60));

        idLabel1.setText("Descripcion");
        jPanel2.add(idLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 80, -1));

        disponibilidadCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Disponible", "Venta", "Arriendo", "Reserva" }));
        disponibilidadCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disponibilidadComboActionPerformed(evt);
            }
        });
        jPanel2.add(disponibilidadCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 120, 30));

        idLabel2.setText("Disponibilidad");
        jPanel2.add(idLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 80, -1));

        dirreccionText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dirreccionTextActionPerformed(evt);
            }
        });
        jPanel2.add(dirreccionText, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 183, 30));

        telfLabel1.setText("Dirreccion");
        jPanel2.add(telfLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 183, -1));

        errorNames.setForeground(new java.awt.Color(255, 0, 51));
        errorNames.setText("Error, tiene que tener un nombre y un apellido");
        jPanel2.add(errorNames, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 250, 30));

        errorDescripcion.setForeground(new java.awt.Color(255, 0, 51));
        errorDescripcion.setText("Error, tiene que tener un nombre y un apellido");
        jPanel2.add(errorDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 250, 30));

        fondoCampos.setBackground(new java.awt.Color(255, 255, 255));
        fondoCampos.setOpaque(true);
        jPanel2.add(fondoCampos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 800, 210));
        jPanel2.add(fondoM, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -30, 900, 580));

        MenuBaseDatos.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        MongolBDMenu.setText("MongolBD");

        jMenu1.setText("Guardar");

        GuardarBD.setText("Guardar En BD");
        GuardarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarBDActionPerformed(evt);
            }
        });
        jMenu1.add(GuardarBD);

        MongolBDMenu.add(jMenu1);

        jMenu2.setText("Conectar");

        jMenuItem2.setText("Conectar BD");
        jMenu2.add(jMenuItem2);

        MongolBDMenu.add(jMenu2);

        MenuBaseDatos.add(MongolBDMenu);

        jMenu3.setText("Buscar");

        jMenuItem1.setText("Buscar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        MenuBaseDatos.add(jMenu3);

        exitMenu.setText("Exit");

        exitMenuAdd.setText("Salir");
        exitMenuAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuAddActionPerformed(evt);
            }
        });
        exitMenu.add(exitMenuAdd);

        backMenu.setText("Regresar");
        backMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMenuActionPerformed(evt);
            }
        });
        exitMenu.add(backMenu);

        MenuBaseDatos.add(exitMenu);

        setJMenuBar(MenuBaseDatos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 547, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTableActionPerformed
    String nombres=namesPropiedad.getText();
    String descripcion=descripcionText.getText();
    String precio=precioText.getText();
    String metros=metrosText.getText();
    String dirreccion=dirreccionText.getText();
    String disponibilidad=disponibilidadCombo.getSelectedItem().toString();
    String numeroCuartos=numeroCuartosCombo.getSelectedItem().toString();
    String ubicacion=ubicacionCombo.getSelectedItem().toString();
    boolean valid = true;
    
    if (!nombres.matches("[A-Za-z]+\\s[A-Za-z]+")) {
        errorNames.setText("Error: tiene que tener un nombre y un apellido");
        errorNames.setVisible(true);
        valid = false;
    } else {
        errorNames.setVisible(false);
    }
    
    if (descripcion.isEmpty()) {
        errorDescripcion.setText("Error: descripcion no puede estar vacia");
        errorDescripcion.setVisible(true);
        valid = false;
    } else {
        errorDescripcion.setVisible(false);
    }
    
    if (dirreccion.isEmpty()) {
        errorDirrecion.setText("Error: dirreccion no puede estar vacia");
        errorDirrecion.setVisible(true);
        valid = false;
    } else {
        errorDirrecion.setVisible(false);
    }
    
    if (!precio.matches("^\\d+(\\.\\d{1,2})?$")) {
        errorPrecio.setText("Error: debe ser un numero decimal");
        errorPrecio.setVisible(true);
        valid = false;
    } else {
        errorPrecio.setVisible(false);
    }
    
    if (!metros.matches("^\\d+(\\.\\d{1,2})?$")) {
        errorMetros.setText("Error: debe ser un numero decimal");
        errorMetros.setVisible(true);
        valid = false;
    } else {
        errorMetros.setVisible(false);
    }   
    
    if (valid) {
        DefaultTableModel tableModel = (DefaultTableModel) dataTable.getModel();
        int rowCount = tableModel.getRowCount();
        boolean duplicate = false;

        for (int i = 0; i < rowCount; i++) {
            String existingNombres = tableModel.getValueAt(i, 1).toString();

            if (nombres.equals(existingNombres)) {
                duplicate = true;
                break;
            }
        }

        if (duplicate) {
            JOptionPane.showMessageDialog(this, "Error: El Nombre De La Propiedad no puede ser lo mismo.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String[] camposT = {nombres, descripcion, precio, metros, dirreccion,disponibilidad,numeroCuartos,ubicacion};
            tableModel.addRow(camposT);

            // Limpiar los campos de entrada
            namesPropiedad.setText("");
            descripcionText.setText("");
            precioText.setText("");
            metrosText.setText("");
            dirreccionText.setText("");
            disponibilidadCombo.setSelectedIndex(0);
            numeroCuartosCombo.setSelectedIndex(0);
            ubicacionCombo.setSelectedIndex(0);// Reiniciar el combo box de género
        }
    }
    }//GEN-LAST:event_saveTableActionPerformed

    private void namesPropiedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namesPropiedadActionPerformed
    }//GEN-LAST:event_namesPropiedadActionPerformed

    private void deleteTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTableActionPerformed
    DefaultTableModel tableModel = (DefaultTableModel) dataTable.getModel();
    int[] selectedRows = dataTable.getSelectedRows();

    // Eliminar las filas seleccionadas del modelo de la tabla
    for (int i = selectedRows.length - 1; i >= 0; i--) {
        tableModel.removeRow(selectedRows[i]);
    }
    }//GEN-LAST:event_deleteTableActionPerformed

    private void descripcionTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descripcionTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descripcionTextActionPerformed

    private void metrosTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metrosTextActionPerformed
        String metros=metrosText.getText();

    }//GEN-LAST:event_metrosTextActionPerformed

    private void precioTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precioTextActionPerformed
        String precio=precioText.getText();
        if(precio.matches("^\\d+(\\.\\d{1,2})?$")){
            errorPrecio.setVisible(false);
        }else{
            errorPrecio.setText("Error: debe ser numero decimal");
            errorPrecio.setVisible(true);
        }
    }//GEN-LAST:event_precioTextActionPerformed

    private void ModificateTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificateTableActionPerformed
   
    }//GEN-LAST:event_ModificateTableActionPerformed

    private void GuardarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarBDActionPerformed
    // Obtener el modelo de la tabla
    DefaultTableModel tableModel = (DefaultTableModel) dataTable.getModel();
    
    // Crear instancia de MongoDBManager (asegúrate de importar la clase correcta)
    ConexionBD.ConexionBDClientes manager = new ConexionBD.ConexionBDClientes();

    // Iterar sobre cada fila de la tabla
    for (int i = 0; i < tableModel.getRowCount(); i++) {
        // Obtener los datos de la fila actual
        String nombres = (String) tableModel.getValueAt(i, 0);
        String descripcion = (String) tableModel.getValueAt(i, 1);
        String precio = (String) tableModel.getValueAt(i, 2);
        String metros = (String) tableModel.getValueAt(i, 3);
        String dirreccion=(String) tableModel.getValueAt(i,4);
        String disponibilidad=(String)tableModel.getValueAt(i, 5);
        String numeroCuartos=(String)tableModel.getValueAt(i,6);
        String ubicacion=(String)tableModel.getValueAt(i,7);
        // Guardar los datos en MongoDB
        String[] datos = {nombres, descripcion, precio, metros,dirreccion,disponibilidad,numeroCuartos,ubicacion};
        manager.guardarDatos(datos);
    }
    
    // Eliminar todas las filas de la tabla
    tableModel.setRowCount(0); // Establece el número de filas a cero
    
    // Cerrar la conexión con MongoDB al finalizar
    manager.cerrarConexion();
    
    // Opcional: Mostrar un mensaje de confirmación
    JOptionPane.showMessageDialog(this, "Datos guardados en MongoDB correctamente.", "Guardar en MongoDB", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_GuardarBDActionPerformed

    private void exitMenuAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuAddActionPerformed
        int confirm = JOptionPane.showOptionDialog(
            this,
            "¿Estás seguro de que quieres salir?",
            "Confirmación de salida",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            new Object[]{"Sí", "No"},
            "No"
        );

        if (confirm == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitMenuAddActionPerformed

    private void backMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backMenuActionPerformed
               // Ocultar la ventana actual
        this.setVisible(false);
    }//GEN-LAST:event_backMenuActionPerformed

    private void languajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_languajeActionPerformed
    
    }//GEN-LAST:event_languajeActionPerformed

    private void numeroCuartosComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroCuartosComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroCuartosComboActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ubicacionComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubicacionComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ubicacionComboActionPerformed

    private void disponibilidadComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disponibilidadComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_disponibilidadComboActionPerformed

    private void dirreccionTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dirreccionTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dirreccionTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IngresoPropiedades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IngresoPropiedades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IngresoPropiedades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IngresoPropiedades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IngresoPropiedades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Genero;
    private javax.swing.JMenuItem GuardarBD;
    private javax.swing.JMenuBar MenuBaseDatos;
    private javax.swing.JButton ModificateTable;
    private javax.swing.JMenu MongolBDMenu;
    private javax.swing.JMenuItem backMenu;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton deleteTable;
    private javax.swing.JTextField descripcionText;
    private javax.swing.JTextField dirreccionText;
    private javax.swing.JComboBox<String> disponibilidadCombo;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel errorDescripcion;
    private javax.swing.JLabel errorDirrecion;
    private javax.swing.JLabel errorMetros;
    private javax.swing.JLabel errorNames;
    private javax.swing.JLabel errorPrecio;
    private javax.swing.JMenu exitMenu;
    private javax.swing.JMenuItem exitMenuAdd;
    private javax.swing.JLabel fondoCampos;
    private javax.swing.JLabel fondoM;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel idLabel1;
    private javax.swing.JLabel idLabel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JComboBox<String> languaje;
    private javax.swing.JTextField metrosText;
    private javax.swing.JTextField namesPropiedad;
    private javax.swing.JLabel nombrePLabel;
    private javax.swing.JComboBox<String> numeroCuartosCombo;
    private javax.swing.JTextField precioText;
    private javax.swing.JButton saveTable;
    private javax.swing.JLabel telfLabel;
    private javax.swing.JLabel telfLabel1;
    private javax.swing.JComboBox<String> ubicacionCombo;
    // End of variables declaration//GEN-END:variables
}
