/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Interface.Administrador;

import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
/**
 *
 * @author Rayson
 */
public class IngresoClienteP extends javax.swing.JPanel {

    /**
     * Creates new form IngresoClienteP
     */
    public IngresoClienteP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        NombresLabel = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        errorNames = new javax.swing.JLabel();
        telfLabel = new javax.swing.JLabel();
        errorContra = new javax.swing.JLabel();
        errorPhone = new javax.swing.JLabel();
        errorId = new javax.swing.JLabel();
        names = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        deleteTable = new javax.swing.JButton();
        saveTable = new javax.swing.JButton();
        ModificateTable = new javax.swing.JButton();
        mes = new javax.swing.JComboBox<>();
        Genero = new javax.swing.JLabel();
        languaje = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        cedula = new javax.swing.JTextField();
        idLabel1 = new javax.swing.JLabel();
        contrasenia = new javax.swing.JTextField();
        idLabel2 = new javax.swing.JLabel();
        errorEmail = new javax.swing.JLabel();
        generoCombo = new javax.swing.JComboBox<>();
        anio = new javax.swing.JComboBox<>();
        dia = new javax.swing.JComboBox<>();
        diaLabel = new javax.swing.JLabel();
        idLabel5 = new javax.swing.JLabel();
        fondoCampos = new javax.swing.JLabel();
        fondoM = new javax.swing.JLabel();

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setViewportView(dataTable);

        jScrollPane2.setViewportView(jScrollPane1);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 450, 231));

        NombresLabel.setText("Nombres Completos");
        jPanel2.add(NombresLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 164, -1));

        idLabel.setText("Año");
        jPanel2.add(idLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 170, 100, -1));

        emailLabel.setText("Email");
        jPanel2.add(emailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, 183, -1));

        errorNames.setForeground(new java.awt.Color(255, 0, 51));
        errorNames.setText("Error, tiene que tener un nombre y un apellido");
        jPanel2.add(errorNames, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 250, 30));

        telfLabel.setText("Telefono");
        jPanel2.add(telfLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, 183, -1));

        errorContra.setForeground(new java.awt.Color(255, 0, 51));
        errorContra.setText("Contrasenia incorrecta");
        jPanel2.add(errorContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 183, -1));

        errorPhone.setForeground(new java.awt.Color(255, 0, 51));
        errorPhone.setText("Telefono incorrecto");
        jPanel2.add(errorPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 183, -1));

        errorId.setForeground(new java.awt.Color(255, 0, 51));
        errorId.setText("Id Incorrecto");
        jPanel2.add(errorId, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 183, -1));

        names.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namesActionPerformed(evt);
            }
        });
        jPanel2.add(names, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 189, -1));

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        jPanel2.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 183, -1));

        phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneActionPerformed(evt);
            }
        });
        jPanel2.add(phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 183, -1));

        deleteTable.setText("ELIMINAR");
        deleteTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTableActionPerformed(evt);
            }
        });
        jPanel2.add(deleteTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 480, -1, -1));

        saveTable.setText("GUARDAR");
        saveTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveTableActionPerformed(evt);
            }
        });
        jPanel2.add(saveTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, -1, -1));

        ModificateTable.setText("MODIFICAR");
        ModificateTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificateTableActionPerformed(evt);
            }
        });
        jPanel2.add(ModificateTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 480, -1, -1));

        mes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        mes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mesActionPerformed(evt);
            }
        });
        jPanel2.add(mes, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 140, 90, 30));

        Genero.setText("Genero");
        jPanel2.add(Genero, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 183, -1));

        languaje.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Español", "English" }));
        languaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                languajeActionPerformed(evt);
            }
        });
        jPanel2.add(languaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 440, -1, -1));

        jButton1.setText("LEER");
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 480, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("BIENVENIDO AL INGRESO DE CLIENTE\n\nFLEXIHOME\n\n");
        jScrollPane3.setViewportView(jTextArea1);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 280, 280, 60));

        cedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaActionPerformed(evt);
            }
        });
        jPanel2.add(cedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 183, -1));

        idLabel1.setText("Cedula");
        jPanel2.add(idLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 70, -1));

        contrasenia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contraseniaActionPerformed(evt);
            }
        });
        jPanel2.add(contrasenia, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 183, -1));

        idLabel2.setText("Contrasenia");
        jPanel2.add(idLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 100, -1));

        errorEmail.setForeground(new java.awt.Color(255, 0, 51));
        errorEmail.setText("Email incorrecto");
        jPanel2.add(errorEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 183, -1));

        generoCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hombre", "Mujer", "No Binario", "Otro" }));
        generoCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generoComboActionPerformed(evt);
            }
        });
        jPanel2.add(generoCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 90, 30));

        anio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024" }));
        anio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anioActionPerformed(evt);
            }
        });
        jPanel2.add(anio, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 190, 90, 30));

        dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diaActionPerformed(evt);
            }
        });
        jPanel2.add(dia, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 90, 90, 30));

        diaLabel.setText("Dia");
        jPanel2.add(diaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, 100, -1));

        idLabel5.setText("Mes");
        jPanel2.add(idLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 120, 100, -1));

        fondoCampos.setBackground(new java.awt.Color(255, 255, 255));
        fondoCampos.setOpaque(true);
        jPanel2.add(fondoCampos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 680, 220));
        jPanel2.add(fondoM, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -30, 900, 580));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 547, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void namesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namesActionPerformed

    }//GEN-LAST:event_namesActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneActionPerformed

    private void deleteTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTableActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) dataTable.getModel();
        int[] selectedRows = dataTable.getSelectedRows();

        // Eliminar las filas seleccionadas del modelo de la tabla
        for (int i = selectedRows.length - 1; i >= 0; i--) {
            tableModel.removeRow(selectedRows[i]);
        }
    }//GEN-LAST:event_deleteTableActionPerformed

    private void saveTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTableActionPerformed
        // Obtener los datos ingresados
        String CI=cedula.getText();
        String contra=contrasenia.getText();
        String nombres = names.getText();
        String telf = phone.getText();
        String mail = email.getText();
        String genero = generoCombo.getSelectedItem().toString();
        String diaB=dia.getSelectedItem().toString();
        String mesB=mes.getSelectedItem().toString();
        String anioB=anio.getSelectedItem().toString();
        String fecha=diaB+"/"+mesB+"/"+anioB;

        // Validar los campos
        boolean valid = true;

        if (!nombres.matches("[A-Za-z]+\\s[A-Za-z]+")) {
            errorNames.setText("Error: tiene que tener un nombre y un apellido");
            errorNames.setVisible(true);
            valid = false;
        } else {
            errorNames.setVisible(false);
        }

        if (!CI.matches("\\d{10}")) {
            errorId.setText("Error: el ID debe contener 10 dígitos");
            errorId.setVisible(true);
            valid = false;
        } else {
            errorId.setVisible(false);
        }

        if (!telf.matches("\\d{10}")) {
            errorPhone.setText("Error: el teléfono debe contener 10 dígitos");
            errorPhone.setVisible(true);
            valid = false;
        } else {
            errorPhone.setVisible(false);
        }

        if (!mail.matches("^[A-Za-z0-9+_.-]+@(.+)$")) {
            errorEmail.setText("Error: email incorrecto");
            errorEmail.setVisible(true);
            valid = false;
        } else {
            errorEmail.setVisible(false);
        }
        if(contra.isEmpty()){
            errorContra.setText("Error: La Contrasenia es obligatoria");
            errorContra.setVisible(true);
            valid = false;
        }else{
            errorContra.setVisible(false);
        }

        // Si todos los campos son válidos, agregar a la tabla
        if (valid) {
            DefaultTableModel tableModel = (DefaultTableModel) dataTable.getModel();
            int rowCount = tableModel.getRowCount();
            String[] camposT = {CI,contra,nombres,telf, mail, genero,fecha};
            tableModel.addRow(camposT);
            // Limpiar los campos de entrada
            names.setText("");
            phone.setText("");
            email.setText("");
            mes.setSelectedIndex(0); // Reiniciar el combo box de género
        }
    }//GEN-LAST:event_saveTableActionPerformed

    private void ModificateTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificateTableActionPerformed
        // Obtener el modelo de la tabla
        DefaultTableModel tableModel = (DefaultTableModel) dataTable.getModel();

        // Obtener la fila seleccionada
        int selectedRow = dataTable.getSelectedRow();

        // Verificar si se ha seleccionado una fila
        if (selectedRow >= 0) {
            // Obtener los valores de la fila seleccionada
            String nombres = (String) tableModel.getValueAt(selectedRow, 0);
            String ID = (String) tableModel.getValueAt(selectedRow, 1);
            String telf = (String) tableModel.getValueAt(selectedRow, 2);
            String mail = (String) tableModel.getValueAt(selectedRow, 3);

            // Establecer los valores en los campos de texto
            names.setText(nombres);
            phone.setText(telf);
            email.setText(mail);

            // Confirmar la modificación
            int confirm = JOptionPane.showConfirmDialog(this, "¿Desea guardar los cambios?", "Confirmar Modificación", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                // Validar los campos
                boolean valid = true;

                if (!nombres.matches("[A-Za-z]+\\s[A-Za-z]+")) {
                    errorNames.setText("Error: tiene que tener un nombre y un apellido");
                    errorNames.setVisible(true);
                    valid = false;
                } else {
                    errorNames.setVisible(false);
                }

                if (!ID.matches("\\d{10}")) {
                    errorId.setText("Error: el ID debe contener 10 dígitos");
                    errorId.setVisible(true);
                    valid = false;
                } else {
                    errorId.setVisible(false);
                }

                if (!telf.matches("\\d{10}")) {
                    errorPhone.setText("Error: el teléfono debe contener 10 dígitos");
                    errorPhone.setVisible(true);
                    valid = false;
                } else {
                    errorPhone.setVisible(false);
                }

                if (!mail.matches("^[A-Za-z0-9+_.-]+@(.+)$")) {
                    errorContra.setText("Error: email incorrecto");
                    errorContra.setVisible(true);
                    valid = false;
                } else {
                    errorContra.setVisible(false);
                }

                // Si todos los campos son válidos, actualizar la fila
                if (valid) {
                    tableModel.setValueAt(nombres, selectedRow, 0);
                    tableModel.setValueAt(ID, selectedRow, 1);
                    tableModel.setValueAt(telf, selectedRow, 2);
                    tableModel.setValueAt(mail, selectedRow, 3);

                    // Limpiar los campos de entrada
                    names.setText("");
                    phone.setText("");
                    email.setText("");

                    JOptionPane.showMessageDialog(this, "Modificación exitosa.", "Modificar", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila para modificar.", "Modificar", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_ModificateTableActionPerformed

    private void mesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mesActionPerformed

    private void languajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_languajeActionPerformed
        String selectedLanguage = (String) languaje.getSelectedItem();
        if ("Español".equals(selectedLanguage)) {
            // Configurar los textos en español
            NombresLabel.setText("Nombre y Apellido");
            idLabel.setText("ID");
            emailLabel.setText("Email");
            telfLabel.setText("Teléfono");
            Genero.setText("Género");
            errorNames.setText("Error, tiene que tener un nombre y un apellido");
            errorId.setText("Id Incorrecto");
            errorPhone.setText("Teléfono incorrecto");
            errorContra.setText("Email incorrecto");
            saveTable.setText("GUARDAR");
            deleteTable.setText("ELIMINAR");
            ModificateTable.setText("MODIFICAR");
        } else if ("English".equals(selectedLanguage)) {
            // Configurar los textos en inglés
            NombresLabel.setText("Full Name");
            idLabel.setText("ID");
            emailLabel.setText("Email");
            telfLabel.setText("Phone");
            Genero.setText("Gender");
            errorNames.setText("Error: must have a first and last name");
            errorId.setText("Incorrect ID");
            errorPhone.setText("Incorrect phone");
            errorContra.setText("Incorrect email");
            saveTable.setText("SAVE");
            deleteTable.setText("DELETE");
            ModificateTable.setText("MODIFY");
        }

        // Forzar la actualización de la interfaz
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_languajeActionPerformed

    private void cedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaActionPerformed

    private void contraseniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contraseniaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contraseniaActionPerformed

    private void generoComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generoComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generoComboActionPerformed

    private void anioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_anioActionPerformed

    private void diaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Genero;
    private javax.swing.JButton ModificateTable;
    private javax.swing.JLabel NombresLabel;
    private javax.swing.JComboBox<String> anio;
    private javax.swing.JTextField cedula;
    private javax.swing.JTextField contrasenia;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton deleteTable;
    private javax.swing.JComboBox<String> dia;
    private javax.swing.JLabel diaLabel;
    private javax.swing.JTextField email;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel errorContra;
    private javax.swing.JLabel errorEmail;
    private javax.swing.JLabel errorId;
    private javax.swing.JLabel errorNames;
    private javax.swing.JLabel errorPhone;
    private javax.swing.JLabel fondoCampos;
    private javax.swing.JLabel fondoM;
    private javax.swing.JComboBox<String> generoCombo;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel idLabel1;
    private javax.swing.JLabel idLabel2;
    private javax.swing.JLabel idLabel5;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JComboBox<String> languaje;
    private javax.swing.JComboBox<String> mes;
    private javax.swing.JTextField names;
    private javax.swing.JTextField phone;
    private javax.swing.JButton saveTable;
    private javax.swing.JLabel telfLabel;
    // End of variables declaration//GEN-END:variables
}
