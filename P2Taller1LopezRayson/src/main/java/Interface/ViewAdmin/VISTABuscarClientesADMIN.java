/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Interface.ViewAdmin;

import ConexionBD.ConexionBDClientes;
import static ConexionBD.MongoBD.getCOLLECTIONCLIENTES_NAME;
import static ConexionBD.MongoBD.getDATABASE_NAME;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import java.util.ArrayList;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.bson.Document;

/**
 *
 * @author Rayson
 */
public class VISTABuscarClientesADMIN extends javax.swing.JPanel {
    private DefaultTableModel tableModel;
    /**
     * Creates new form BuscarClientesA
     */
    public VISTABuscarClientesADMIN() {
        initComponents();
                tableModel=new DefaultTableModel(new Object[][]{},new String[]{"CI","Contrasenia","Nombres Completos","Telefono","Email","Genero","Fecha"})
        {
        @Override
        public boolean isCellEditable(int row,int column){
            return false;
        }
    };
        ConexionBDClientes conexionBD=new ConexionBDClientes();
        conexionBD.actualizarTablaMongo(tableModel);
        TablaMongo.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelBuscarC = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaMongo = new javax.swing.JTable();
        AZ = new javax.swing.JRadioButton();
        correoAZ = new javax.swing.JRadioButton();
        Filtrar = new javax.swing.JLabel();
        modificarTabla = new javax.swing.JButton();
        eliminarTabla = new javax.swing.JButton();
        filtroTexto = new javax.swing.JTextField();

        PanelBuscarC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TablaMongo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TablaMongo);

        PanelBuscarC.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 820, 400));

        AZ.setText("A-Z");
        AZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AZActionPerformed(evt);
            }
        });
        PanelBuscarC.add(AZ, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, 98, -1));

        correoAZ.setText("CORREO A-Z");
        correoAZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                correoAZActionPerformed(evt);
            }
        });
        PanelBuscarC.add(correoAZ, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 50, 98, -1));

        Filtrar.setText("Filtrar");
        PanelBuscarC.add(Filtrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 80, -1, -1));

        modificarTabla.setText("MODIFICAR");
        modificarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarTablaActionPerformed(evt);
            }
        });
        PanelBuscarC.add(modificarTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 130, 120, -1));

        eliminarTabla.setText("ELIMINAR");
        eliminarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarTablaActionPerformed(evt);
            }
        });
        PanelBuscarC.add(eliminarTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 160, 120, -1));

        filtroTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtroTextoActionPerformed(evt);
            }
        });
        PanelBuscarC.add(filtroTexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 100, 120, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelBuscarC, javax.swing.GroupLayout.DEFAULT_SIZE, 962, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelBuscarC, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AZActionPerformed
        TableRowSorter<TableModel>sorter=new TableRowSorter<TableModel>(tableModel);
        TablaMongo.setRowSorter(sorter);
        ArrayList<RowSorter.SortKey>sortKeys=new ArrayList<RowSorter.SortKey>();
        sortKeys.add(new RowSorter.SortKey(2, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);
        sorter.sort();
    }//GEN-LAST:event_AZActionPerformed

    private void correoAZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_correoAZActionPerformed
        TableRowSorter<TableModel>sorter=new TableRowSorter<TableModel>(tableModel);
        TablaMongo.setRowSorter(sorter);
        ArrayList<RowSorter.SortKey>sortKeys=new ArrayList<RowSorter.SortKey>();
        sortKeys.add(new RowSorter.SortKey(4, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);
        sorter.sort();
    }//GEN-LAST:event_correoAZActionPerformed

    private void modificarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarTablaActionPerformed
        // Obtener el modelo de la tabla
        DefaultTableModel tableModel = (DefaultTableModel) TablaMongo.getModel();
        tableModel = new DefaultTableModel(
            new Object[][] {},
            new String[]{"CI","Contrasenia","Nombre y Apellido", "Telefono", "Email", "Genero","Fecha"}
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return true;
            }
        };

        // Agregar listener al modelo de la tabla
        tableModel.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                int row = e.getFirstRow();
                int column = e.getColumn();
                Object data = TablaMongo.getValueAt(row, column);

                // Aquí puedes obtener la fila y columna modificada, así como el nuevo valor
                System.out.println("Celda modificada: " + TablaMongo.getColumnName(column) + " en fila " + row + " con valor " + data);
            }
        });
        ConexionBDClientes conexionBD=new ConexionBDClientes();
        conexionBD.actualizarTablaMongo(tableModel);
        TablaMongo.setModel(tableModel);
    }//GEN-LAST:event_modificarTablaActionPerformed

    private void eliminarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarTablaActionPerformed
        int row = TablaMongo.getSelectedRow();
        if (row != -1) {
            String ci = (String) TablaMongo.getValueAt(row, 0);
            ConexionBDClientes conexion = new ConexionBDClientes();
            MongoClient mongoClient = MongoClients.create(); // Se conecta al servidor local MongoDB por defecto
            MongoDatabase database = mongoClient.getDatabase(getDATABASE_NAME());
            MongoCollection<Document> collection = database.getCollection(getCOLLECTIONCLIENTES_NAME());
            Document filter = new Document("CI", ci);
            collection.deleteOne(filter);
            conexion.close();
            ((DefaultTableModel) TablaMongo.getModel()).removeRow(row);
        }
    }//GEN-LAST:event_eliminarTablaActionPerformed

    private void filtroTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtroTextoActionPerformed
        String texto=filtroTexto.getText();
        TableRowSorter<TableModel>sorter=new TableRowSorter<TableModel>(tableModel);
        TablaMongo.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter(texto,0,1,2,3));
    }//GEN-LAST:event_filtroTextoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AZ;
    private javax.swing.JLabel Filtrar;
    private javax.swing.JPanel PanelBuscarC;
    private javax.swing.JTable TablaMongo;
    private javax.swing.JRadioButton correoAZ;
    private javax.swing.JButton eliminarTabla;
    private javax.swing.JTextField filtroTexto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarTabla;
    // End of variables declaration//GEN-END:variables
}
