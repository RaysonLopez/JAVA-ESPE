package Interface;

import java.awt.Color;
import java.awt.Image;
import java.util.prefs.Preferences;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Rayson
 */
public class Login extends javax.swing.JFrame {
        /**
     * Creates new form Inferdaz
     */ 
    private String userId;
    private String userPassword;
    private Preferences prefs;
     public Login() {
        initComponents();
        errorId.setVisible(false);
        errorPassword.setVisible(false);
        prefs = Preferences.userRoot().node(this.getClass().getName());
        String rememberedUserId = prefs.get("userId", "");
    if (!rememberedUserId.isEmpty()) {
    id.setText(rememberedUserId);
    CheckMostrarContra.setSelected(true);
}
            LineBorder lineBorder =new LineBorder(Color.white, 8, true);
        password.setBorder(lineBorder);
        id.setBorder(lineBorder);
        exitButton.setBorder(lineBorder);
        Redimensionador(FONDO, "/Login/LOGIN.png");
        // Configurar la operación de cierre para salir de la aplicación
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
     private void Redimensionador(JComponent componente, String ruta) {
        ImageIcon imagenFondo = cargarImagen(ruta);
        Icon fondoRedimensionado = redimensionarImagen(imagenFondo, componente.getWidth(), componente.getHeight());
        aplicarImagen(componente, fondoRedimensionado);
        centrarVentana();
    }

    // Cargar la imagen desde la ruta especificada
    private ImageIcon cargarImagen(String ruta) {
        return new ImageIcon(getClass().getResource(ruta));
    }

    // Redimensionar la imagen a las dimensiones especificadas
    private Icon redimensionarImagen(ImageIcon imagen, int ancho, int alto) {
        return new ImageIcon(imagen.getImage().getScaledInstance(ancho, alto, Image.SCALE_DEFAULT));
    }

    // Aplicar la imagen al componente, si es un JLabel
    private void aplicarImagen(JComponent componente, Icon imagen) {
        if (componente instanceof JLabel) {
            ((JLabel) componente).setIcon(imagen);
        } else if (componente instanceof JButton) {
            ((JButton) componente).setIcon(imagen);
        } else {
            throw new IllegalArgumentException("El componente debe ser un JLabel o JButton");
        }
    }

    // Centrar la ventana relativa a la pantalla
    private void centrarVentana() {
        setLocationRelativeTo(null);
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        errorPassword = new javax.swing.JLabel();
        login = new javax.swing.JLabel();
        errorId = new javax.swing.JLabel();
        passwordL = new javax.swing.JLabel();
        usuarioL = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        ButtomIniciar = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        languaje = new javax.swing.JComboBox<>();
        CheckMostrarContra = new javax.swing.JCheckBox();
        FONDO = new javax.swing.JLabel();

        setLocation(new java.awt.Point(1200, 800));
        setPreferredSize(new java.awt.Dimension(450, 450));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        errorPassword.setBackground(new java.awt.Color(255, 51, 51));
        errorPassword.setFont(new java.awt.Font("Segoe UI Emoji", 2, 12)); // NOI18N
        errorPassword.setForeground(new java.awt.Color(255, 51, 51));
        errorPassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errorPassword.setText("Password Incorrecta");
        getContentPane().add(errorPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, 260, 20));

        login.setFont(new java.awt.Font("OCR A Extended", 3, 18)); // NOI18N
        login.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        login.setText("Ingresar");
        login.setToolTipText("");
        getContentPane().add(login, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 190, 40));

        errorId.setFont(new java.awt.Font("Segoe UI Emoji", 3, 12)); // NOI18N
        errorId.setForeground(new java.awt.Color(255, 51, 102));
        errorId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errorId.setText("ID Invalido");
        getContentPane().add(errorId, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 340, 20));

        passwordL.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        passwordL.setText("PASSWORD");
        getContentPane().add(passwordL, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, -1, -1));

        usuarioL.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        usuarioL.setText("USUARIO");
        getContentPane().add(usuarioL, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, -1, -1));

        id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        id.setActionCommand("<Not Set>");
        id.setBorder(null);
        id.setVerifyInputWhenFocusTarget(false);
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });
        getContentPane().add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 180, 30));

        password.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });
        getContentPane().add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 180, 30));

        ButtomIniciar.setBackground(new java.awt.Color(0, 0, 0));
        ButtomIniciar.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        ButtomIniciar.setText("Ingresar");
        ButtomIniciar.setToolTipText("");
        ButtomIniciar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtomIniciar.setContentAreaFilled(false);
        ButtomIniciar.setFocusPainted(false);
        ButtomIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtomIniciarActionPerformed(evt);
            }
        });
        getContentPane().add(ButtomIniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 100, 30));

        exitButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        exitButton.setText("Salir");
        exitButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exitButton.setContentAreaFilled(false);
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, 40));

        languaje.setEditable(true);
        languaje.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Español", "Ingles" }));
        languaje.setOpaque(true);
        languaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                languajeActionPerformed(evt);
            }
        });
        getContentPane().add(languaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 370, 90, -1));

        CheckMostrarContra.setText("Mostrar Contrasenia");
        CheckMostrarContra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckMostrarContraActionPerformed(evt);
            }
        });
        getContentPane().add(CheckMostrarContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 290, -1, -1));

        FONDO.setDoubleBuffered(true);
        getContentPane().add(FONDO, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed

    }//GEN-LAST:event_idActionPerformed

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed

    }//GEN-LAST:event_passwordActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        int confirm = JOptionPane.showOptionDialog(
            this,
            "¿Estás seguro de que quieres salir?",
            "Confirmación de salida",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            new Object[]{"Sí", "No"},
            "No"
        );

        if (confirm == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitButtonActionPerformed

    private void CheckMostrarContraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckMostrarContraActionPerformed
        if (CheckMostrarContra.isSelected()) {
        password.setEchoChar((char) 0); // Mostrar la contraseña
    } else {
        password.setEchoChar('*'); // Ocultar la contraseña
    }
    }//GEN-LAST:event_CheckMostrarContraActionPerformed

    private void ButtomIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtomIniciarActionPerformed
        String userId = id.getText().trim(); // Obtener el ID ingresado
        String userPassword = new String(password.getPassword()); // Obtener la contraseña ingresada

        // Verificar el ID de usuario
        if (userId.isEmpty()) {
            errorId.setText("El ID no puede estar vacío");
            errorId.setVisible(true);
        } else if (!userId.matches("\\d{10}")) {
            errorId.setText("ID debe contener exactamente 10 dígitos numéricos");
            errorId.setVisible(true);
        } else {
            errorId.setVisible(false);
        }

        // Verificar la contraseña
        if (userPassword.isEmpty()) {
            errorPassword.setText("La contraseña no puede estar vacía");
            errorPassword.setVisible(true);
        } else {
            errorPassword.setVisible(false);
        }

        // Si ambos campos son válidos, intentar el inicio de sesión
        if (errorId.isVisible() || errorPassword.isVisible()) {
            return; // No proceder si hay errores
        }

        if (userId.equals("1234567890") && userPassword.equals("password")) {
            JOptionPane.showMessageDialog(this, "Inicio de sesión exitoso.", "Login", JOptionPane.INFORMATION_MESSAGE);
            abrirMenuPrincipal(); // Método para abrir la siguiente ventana

            // Reiniciar los campos después del inicio de sesión exitoso
            id.setText("");
            password.setText("");
            errorId.setVisible(false);
            errorPassword.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "ID o contraseña incorrecta", "Login", JOptionPane.ERROR_MESSAGE);
            password.setText(""); // Limpiar el campo de contraseña en caso de error
        }
    }//GEN-LAST:event_ButtomIniciarActionPerformed

    private void languajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_languajeActionPerformed
     String selectedLanguage = (String) languaje.getSelectedItem();
    if ("Español".equals(selectedLanguage)) {
        // Textos en español
        login.setText("Ingresar");
        usuarioL.setText("USUARIO");
        passwordL.setText("PASSWORD");
        errorId.setText("ID Invalido");
        errorPassword.setText("Password Incorrecta");
        ButtomIniciar.setText("Ingresar");
        exitButton.setText("Salir");
        CheckMostrarContra.setText("Mostrar Contrasenia");
    } else if ("Ingles".equals(selectedLanguage)) {
        // Textos en inglés
        login.setText("Login");
        usuarioL.setText("USER");
        passwordL.setText("PASSWORD");
        errorId.setText("Invalid ID");
        errorPassword.setText("Incorrect Password");
        ButtomIniciar.setText("Login");
        exitButton.setText("Exit");
        CheckMostrarContra.setText("Show Password");
    }

    // Forzar la actualización de la interfaz
    this.revalidate();
    this.repaint();
    }//GEN-LAST:event_languajeActionPerformed
    private void abrirMenuPrincipal() {
        // Crear una instancia de menuPrincipal y hacerla visible
        MenuPrincipal menu = new MenuPrincipal();
        menu.setVisible(true);
        // Ocultar la ventana de login actual
        this.setVisible(false);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* Ifor details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtomIniciar;
    private javax.swing.JCheckBox CheckMostrarContra;
    private javax.swing.JLabel FONDO;
    private javax.swing.JLabel errorId;
    private javax.swing.JLabel errorPassword;
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField id;
    private javax.swing.JComboBox<String> languaje;
    private javax.swing.JLabel login;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel passwordL;
    private javax.swing.JLabel usuarioL;
    // End of variables declaration//GEN-END:variables
}
